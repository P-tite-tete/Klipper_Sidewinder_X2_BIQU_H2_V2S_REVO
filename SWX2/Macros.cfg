# WARNING. DO NOT EDIT THIS FILE.
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.
[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(printer.heater_bed.target, true)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer.extruder.target, true)|float %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE|default(PLA)|string %}
  SET_LED LED=extruder RED=1 GREEN=0 BLUE=0 ;Red
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  G21
  M117 Origine
  G28 ; home
  BED_MESH_PROFILE LOAD={FILAMENT_TYPE}
  BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX} PROFILE={FILAMENT_TYPE} FORCE_NEW_MESH=True
  G90
  # Wait for bed to reach temperature
  M190 S{BED_TEMP}
  # Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}
  SET_LED LED=extruder RED=0 GREEN=1 BLUE=0 ;Green
  PRIME_LINE
  SET_LED LED=extruder RED=1 GREEN=1 BLUE=1 ; White
  M117 Impression ...
  G92 E0.0000

[gcode_macro PRIME_LINE]
description: Prints a primeline, used internally, if configured, as part of the START_PRINT macro.
gcode:
      {% set NOZZLE_SIZE = printer.configfile.settings.extruder.nozzle_diameter %}
      SAVE_GCODE_STATE NAME=prime_line_state
      G90 # Absolute positioning
      M82 # Absolute extrusion
      M117 Priming nozzle with prime line..
      RESPOND MSG="Priming nozzle with prime line.."
      G1 Z5 F3000 # Lift 5 mm
      G1 X{printer.toolhead.axis_minimum.x + 10} Y{printer.toolhead.axis_minimum.y + 5} F3000 # Move to prime area
      G1 Z0.3 F3000 # Get ready to prime

                    }"
      DRAW_LINE_TO Y=203 WIDTH="{NOZZLE_SIZE * 1.25}" HEIGHT="{NOZZLE_SIZE * 0.75}" FEEDRATE=600 # Prime nozzle
      #G1 Y{printer.toolhead.axis_minimum.y + 205} E32 F1200 # Prime nozzle
      DRAW_LINE_TO Y=53 WIDTH="{NOZZLE_SIZE * 1.25}" HEIGHT="{NOZZLE_SIZE * 0.75}" FEEDRATE=600 # Prime nozzle
      G1 P4000 # wait for blob
      G1 Z0.1 F3000 # Get ready to prime
      G1 Y{printer.toolhead.position.y + 20} F6000 # Wipe
      RESTORE_GCODE_STATE NAME=prime_line_state

[gcode_macro DRAW_LINE_TO]
description: Extrudes a line of filament at the specified height and width from
  the current coordinate to the supplied XY coordinate. (The height is used only
  to calculate the extrusion volume.)
  Usage: DRAW_LINE_TO [X=<pos>] [Y=<pos>] [HEIGHT=<mm>] [WIDTH=<mm>]
                      [FEEDRATE=<mm/m>]
gcode:
  {% set position = printer.toolhead.position %}
  {% set X = params.X|default(position.x)|float %}
  {% set Y = params.Y|default(position.y)|float %}
  {% set HEIGHT = params.HEIGHT|default(0.1)|float %}
  {% set WIDTH = params.WIDTH|default(0.4)|float %}
  {% set FEEDRATE = params.FEEDRATE|default(1200)|int %}

  {% set distance = ((X - position.x) ** 2 + (Y - position.y) ** 2) ** 0.5 %}

  {% set filament_area = 3.14159 *
       (printer.configfile.settings[
          printer.toolhead.extruder].filament_diameter ** 2) / 4 %}
  {% set E = distance * ((WIDTH * HEIGHT) / filament_area) %}
  
  # Use the base state call here so offset adjustments get persisted.
  SAVE_GCODE_STATE NAME=draw_line_to_state
  ;RESPOND MSG="Impression X:{X} Y:{Y} HEIGHT:{HEIGHT} WIDTH:{WIDTH} FEEDRATE:{FEEDRATE} distance:{distance} filament_area:{filament_area} E:{E}"
  G90
  G92 E0.0
  G1 X{"%.3f" % X} Y{"%.3f" % Y} E{"%.5f" % E} F{FEEDRATE}
  RESTORE_GCODE_STATE NAME=draw_line_to_state

[gcode_macro END_PRINT]
gcode:
  ##### get user parameters or use default #####
  {% set allow_park = True %}
  {% set retract      = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  ##### end of definitions #####
  G4 ; wait
  {% if not printer.pause_resume.is_paused and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {% endif %}
  {% if printer.extruder.can_extrude %}
    M83
    G1 E-{retract} F{sp_retract}
    {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  M117 Print finish.
  SET_LED LED="extruder" RED=0.5 GREEN=0 BLUE=1 ;Purple
  TURN_OFF_HEATERS
  M84 ; et on debraye les moteurs
  M107 ; extinction du ventilateur

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  ##### get user parameters or use default #####
  {% set allow_park = False if printer['gcode_macro _CLIENT_VARIABLE'] is not defined
                 else False if printer['gcode_macro _CLIENT_VARIABLE'].park_at_cancel is not defined
                 else True  if printer['gcode_macro _CLIENT_VARIABLE'].park_at_cancel|lower == 'true' 
                 else False %}
  {% set retract      = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  ##### end of definitions #####
  {% if not printer.pause_resume.is_paused and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {% endif %}
  {% if printer.extruder.can_extrude %}
    M83
    G1 E-{retract} F{sp_retract}
    {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  SET_LED LED=extruder RED=1 GREEN=0.5 BLUE=0 ;Orange
  TURN_OFF_HEATERS
  M107
  M84 ; et on debraye les moteurs
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  SET_LED LED="extruder" RED=0 GREEN=0.7843 BLUE=1 ; cyan
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %} 
  {% set unretract      = 1.0  if not macro_found else client.unretract|default(1.0)|abs %}
  {% set sp_unretract   = 2100 if not macro_found else client.speed_unretract|default(35) * 60 %}
  {% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G11
    {% else %}
      M83
      G1 E{unretract} F{sp_unretract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough %s" % use_fw_retract)}
  {% endif %}
  SET_LED LED=extruder RED=1 GREEN=1 BLUE=1 ; White
  RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}  

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  ##### get user parameters or use default #####
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set use_custom     = False if not macro_found
                     else False if client.use_custom_pos is not defined
                     else True  if client.use_custom_pos|lower == 'true' 
                     else False %}
  {% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
  {% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
  {% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}
  {% set retract      = 1.0  if not macro_found else client.retract|default(1.0)|abs %}
  {% set sp_retract   = 2100 if not macro_found else client.speed_retract|default(35) * 60 %}
  {% set sp_hop       = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
  {% set sp_move      = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
  ##### get config and toolhead values #####
  {% set act = printer.toolhead.position %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set cone = printer.toolhead.cone_start_z|default(max.z) %} ; hight as long the toolhead can reach max and min of an delta
  {% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch'] 
                else False %}
  ##### define park position #####
  {% set z_min = params.Z_MIN|default(0)|float %}
  {% set z_park = [[(act.z + park_dz), z_min]|max, max.z]|min %}
  {% set x_park = params.X       if params.X is defined
             else custom_park_x  if use_custom
             else 0.0            if round_bed 
             else (max.x - 5.0) %}
  {% set y_park = params.Y       if params.Y is defined
             else custom_park_y  if use_custom
             else (max.y - 5.0)  if round_bed and z_park < cone
             else 0.0            if round_bed
             else (max.y - 5.0) %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      G10
    {% else %}
      M83
      G1 E-{retract} F{sp_retract}
      {% if printer.gcode_move.absolute_extrude %} M82 {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    G1 Z{z_park} F{sp_hop}
    G1 X{x_park} Y{y_park} F{sp_move}
    {% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
      SAVE_GCODE_STATE NAME=load_state
      G91
      # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
      {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
        M117 Heating...
        M104 S{params.TEMP|default(220, true)}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
      {% endif %}
      M117 Loading filament...
      # Load the filament into the hotend area.
      G0 E100 F600
      # Wait a secod
      G4 P1000
      # Purge
      G0 E40 F100
      # Wait for purge to complete
      M400
      M117 Filament loaded!
      RESPOND MSG="Filament loaded!"
      RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode:
      SAVE_GCODE_STATE NAME=unload_state
      G91
      {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
        M117 Heating...
        # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
        M104 S{params.TEMP|default(220, true)}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
      {% endif %}
      M117 Unloading filament...
      # Melt the enlarged tip
      G0 E10 F150
      # Extract filament to cold end area 
      G0 E-5 F3600
      # Wait for three seconds
      G4 P3000
      # Push back the filament to smash any stringing 
      G0 E5 F3600
      # Extract back fast in to the cold zone 
      G0 E-15 F3600
      # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
      G0 E-130 F300
      M117 Filament unloaded!
      RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
      RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PID_HOTEND]
description: PID calibration of the hotend with set temp.
gcode:
      M106 S128
      {% set TARGET_TEMP = params.TARGET_TEMP|default(210)|float %} 
      PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
      SAVE_CONFIG

[gcode_macro PID_BED]
description: PID calibration of the hotend with set temp.
gcode:
      {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
      PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
      SAVE_CONFIG

[gcode_macro M600]
#description: Filament change
gcode:
    PAUSE
    M117 Please load new filament and/or resume
    RESPOND MSG="Please load new filament and/or resume"

[gcode_macro PA_CALIBRTION]
gcode:
      SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
      TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020

[gcode_macro SET_RETRACTIONLENGTH]
gcode:
      SET_RETRACTION RETRACT_LENGTH={params.LENGTH|float}
      GET_RETRACTION

[gcode_macro SCREWS_LEVELING]
gcode:
      screws_tilt_calculate

[gcode_macro T0]
gcode:
  ACTIVATE_EXTRUDER extruder=extruder
  SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder"'

[gcode_macro PURGE]
gcode:
  M117 Purge...
  G92 E0; reinitialisation extrudeur
  G1 X0.1 Y20 Z0.3 F6000.0 ; deplacement position intiale
  G1 X0.1 Y200.0 Z0.3 F750.0 E15 ; premiere ligne
  G1 X0.4 Y200.0 Z0.3 F6000.0
  G1 X0.4 Y20 Z0.3 F750.0 E30 ; deuxieme ligne
  G1 Z0.5 F6000;  on bouge un peu la tete pour eviter les frottements





